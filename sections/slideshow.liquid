{% comment %}
  Slideshow Section with Tailwind CSS - Multi-slide carousel with animations
  Supports: multiple slides, text overlays, animation effects, auto-play, navigation
  This version uses primarily Tailwind CSS classes for styling
{% endcomment %}

<section class="relative w-full overflow-hidden {{ section.settings.height_class }}" 
         data-slideshow
         data-autoplay="{{ section.settings.autoplay }}"
         data-autoplay-speed="{{ section.settings.autoplay_speed }}">
  
  <div class="relative w-full h-full">
    <!-- Slides Container -->
    <div class="relative w-full h-full" data-slides-container>
      {% for block in section.blocks %}
        <div class="absolute inset-0 w-full h-full transition-all duration-1000 ease-in-out {% if forloop.first %}opacity-100 visible z-10{% else %}opacity-0 invisible z-0{% endif %}" 
             data-slide="{{ forloop.index0 }}"
             {{ block.shopify_attributes }}>
          
          <!-- Slide Image -->
          {% if block.settings.image != blank %}
            <div class="absolute inset-0 w-full h-full">
              {% render 'image', 
                image: block.settings.image,
                class: 'w-full h-full object-cover',
                sizes: '100vw',
                loading: forloop.first ? 'eager' : 'lazy'
              %}
              <!-- Ken Burns Animation -->
              <div class="absolute inset-0 w-full h-full {% if forloop.first %}ken-burns{% endif %}"></div>
            </div>
          {% endif %}

          <!-- Overlay -->
          {% if section.settings.enable_overlay %}
            <div class="absolute inset-0 bg-black opacity-{{ section.settings.overlay_opacity }}"></div>
          {% endif %}

          <!-- Content -->
          <div class="relative h-full flex items-center justify-{{ block.settings.content_position }} px-4 md:px-8 lg:px-12">
            <div class="max-w-4xl mx-auto text-{{ block.settings.text_alignment }} space-y-4 md:space-y-6">
              <!-- Subtitle -->
              {% if block.settings.subtitle != blank %}
                <p class="text-sm md:text-base lg:text-lg font-medium tracking-wider uppercase opacity-0 translate-y-5 
                         {% if forloop.first %}fade-in animation-delay-200{% endif %}
                         {{ section.settings.text_color_class }}">
                  {{ block.settings.subtitle }}
                </p>
              {% endif %}
              
              <!-- Heading -->
              {% if block.settings.heading != blank %}
                <h2 class="text-3xl md:text-5xl lg:text-6xl xl:text-7xl font-bold leading-tight opacity-0 translate-y-5
                          {% if forloop.first %}fade-in animation-delay-300{% endif %}
                          {{ section.settings.text_color_class }}">
                  {{ block.settings.heading }}
                </h2>
              {% endif %}
              
              <!-- Description -->
              {% if block.settings.description != blank %}
                <div class="text-base md:text-lg lg:text-xl max-w-2xl mx-auto opacity-0 translate-y-5
                           {% if forloop.first %}fade-in animation-delay-400{% endif %}
                           {{ section.settings.text_color_class }}">
                  {{ block.settings.description }}
                </div>
              {% endif %}
              
              <!-- Buttons -->
              {% if block.settings.button_text != blank and block.settings.button_link != blank %}
                <div class="flex flex-col sm:flex-row gap-4 {% if block.settings.text_alignment == 'center' %}justify-center{% elsif block.settings.text_alignment == 'right' %}justify-end{% endif %} 
                           opacity-0 translate-y-5 {% if forloop.first %}fade-in animation-delay-500{% endif %}">
                  <a href="{{ block.settings.button_link }}" 
                     class="inline-flex items-center justify-center px-6 py-3 text-base font-medium rounded-lg
                            transition-all duration-300 transform hover:-translate-y-1 hover:shadow-lg
                            {{ block.settings.button_style_class }}">
                    {{ block.settings.button_text }}
                  </a>
                  
                  {% if block.settings.secondary_button_text != blank and block.settings.secondary_button_link != blank %}
                    <a href="{{ block.settings.secondary_button_link }}" 
                       class="inline-flex items-center justify-center px-6 py-3 text-base font-medium rounded-lg
                              border-2 transition-all duration-300 transform hover:-translate-y-1
                              {{ block.settings.secondary_button_style_class }}">
                      {{ block.settings.secondary_button_text }}
                    </a>
                  {% endif %}
                </div>
              {% endif %}
            </div>
          </div>
        </div>
      {% endfor %}
    </div>

    {% if section.blocks.size > 1 %}
      <!-- Navigation Arrows -->
      <button class="absolute top-1/2 left-4 md:left-8 -translate-y-1/2 z-20 
                     w-12 h-12 bg-white/80 hover:bg-white rounded-full 
                     flex items-center justify-center transition-all duration-300
                     hover:scale-110 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500"
              data-slide-prev
              aria-label="Previous slide">
        <svg class="w-6 h-6 text-gray-800" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" d="M15 19l-7-7 7-7" />
        </svg>
      </button>
      
      <button class="absolute top-1/2 right-4 md:right-8 -translate-y-1/2 z-20 
                     w-12 h-12 bg-white/80 hover:bg-white rounded-full 
                     flex items-center justify-center transition-all duration-300
                     hover:scale-110 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500"
              data-slide-next
              aria-label="Next slide">
        <svg class="w-6 h-6 text-gray-800" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" d="M9 5l7 7-7 7" />
        </svg>
      </button>

      <!-- Dots Navigation -->
      <div class="absolute bottom-6 left-1/2 -translate-x-1/2 z-20 flex gap-2" data-dots-container>
        {% for block in section.blocks %}
          <button class="w-3 h-3 rounded-full transition-all duration-300 
                         {% if forloop.first %}bg-white w-8{% else %}bg-white/50 hover:bg-white/75{% endif %}"
                  data-slide-dot="{{ forloop.index0 }}"
                  aria-label="Go to slide {{ forloop.index }}">
          </button>
        {% endfor %}
      </div>
    {% endif %}
  </div>
</section>

<style>
  /* Custom height classes that can't be done with Tailwind */
  .h-screen-80 {
    height: 80vh;
  }
  
  .h-screen-60 {
    height: 60vh;
  }
  
  .h-screen-40 {
    height: 40vh;
  }
</style>

{% javascript %}
  class Slideshow {
    constructor(element) {
      this.element = element;
      this.slides = element.querySelectorAll('[data-slide]');
      this.dots = element.querySelectorAll('[data-slide-dot]');
      this.prevBtn = element.querySelector('[data-slide-prev]');
      this.nextBtn = element.querySelector('[data-slide-next]');
      this.currentSlide = 0;
      this.autoplay = element.dataset.autoplay === 'true';
      this.autoplaySpeed = parseInt(element.dataset.autoplaySpeed) || 5000;
      this.autoplayInterval = null;
      
      this.init();
    }
    
    init() {
      if (this.slides.length <= 1) return;
      
      // Setup event listeners
      this.prevBtn?.addEventListener('click', () => this.prevSlide());
      this.nextBtn?.addEventListener('click', () => this.nextSlide());
      
      this.dots.forEach((dot, index) => {
        dot.addEventListener('click', () => this.goToSlide(index));
      });
      
      // Setup autoplay
      if (this.autoplay) {
        this.startAutoplay();
        
        this.element.addEventListener('mouseenter', () => this.stopAutoplay());
        this.element.addEventListener('mouseleave', () => this.startAutoplay());
      }
      
      // Setup touch support
      this.setupTouchSupport();
    }
    
    goToSlide(index) {
      // Remove active states
      this.slides.forEach((slide, i) => {
        slide.classList.remove('opacity-100', 'visible', 'z-10');
        slide.classList.add('opacity-0', 'invisible', 'z-0');
        
        // Remove animations from slide content
        const animatedElements = slide.querySelectorAll('.fade-in, .slide-in-left, .slide-in-right, .slide-in-up');
        animatedElements.forEach(el => {
          el.classList.remove('fade-in', 'slide-in-left', 'slide-in-right', 'slide-in-up');
        });
        
        // Remove ken burns from images
        const kenBurnsElements = slide.querySelectorAll('.ken-burns');
        kenBurnsElements.forEach(el => el.classList.remove('ken-burns'));
      });
      
      this.dots.forEach((dot, i) => {
        dot.classList.remove('bg-white', 'w-8');
        dot.classList.add('bg-white/50', 'w-3');
      });
      
      // Add active states
      this.slides[index].classList.remove('opacity-0', 'invisible', 'z-0');
      this.slides[index].classList.add('opacity-100', 'visible', 'z-10');
      
      this.dots[index].classList.remove('bg-white/50', 'w-3');
      this.dots[index].classList.add('bg-white', 'w-8');
      
      // Re-add animations to new slide
      setTimeout(() => {
        const newSlide = this.slides[index];
        newSlide.querySelectorAll('[class*="animation-delay"]').forEach(el => {
          el.classList.add('fade-in');
        });
        
        const kenBurnsElements = newSlide.querySelectorAll('.absolute.inset-0:not(.bg-black)');
        kenBurnsElements.forEach(el => {
          if (el.previousElementSibling?.tagName === 'IMG') {
            el.classList.add('ken-burns');
          }
        });
      }, 50);
      
      this.currentSlide = index;
    }
    
    nextSlide() {
      const next = (this.currentSlide + 1) % this.slides.length;
      this.goToSlide(next);
    }
    
    prevSlide() {
      const prev = (this.currentSlide - 1 + this.slides.length) % this.slides.length;
      this.goToSlide(prev);
    }
    
    startAutoplay() {
      this.stopAutoplay();
      this.autoplayInterval = setInterval(() => this.nextSlide(), this.autoplaySpeed);
    }
    
    stopAutoplay() {
      if (this.autoplayInterval) {
        clearInterval(this.autoplayInterval);
        this.autoplayInterval = null;
      }
    }
    
    setupTouchSupport() {
      let touchStartX = 0;
      let touchEndX = 0;
      
      this.element.addEventListener('touchstart', e => {
        touchStartX = e.changedTouches[0].screenX;
      }, { passive: true });
      
      this.element.addEventListener('touchend', e => {
        touchEndX = e.changedTouches[0].screenX;
        this.handleSwipe();
      }, { passive: true });
      
      const handleSwipe = () => {
        const swipeThreshold = 50;
        const diff = touchStartX - touchEndX;
        
        if (Math.abs(diff) > swipeThreshold) {
          if (diff > 0) {
            this.nextSlide();
          } else {
            this.prevSlide();
          }
        }
      };
      
      this.handleSwipe = handleSwipe;
    }
  }
  
  // Initialize all slideshows on page
  document.addEventListener('DOMContentLoaded', () => {
    const slideshows = document.querySelectorAll('[data-slideshow]');
    slideshows.forEach(slideshow => new Slideshow(slideshow));
  });
{% endjavascript %}

{% schema %}
{
  "name": "Slideshow (Tailwind)",
  "tag": "section",
  "class": "section",
  "max_blocks": 5,
  "settings": [
    {
      "type": "header",
      "content": "Slideshow Settings"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Auto-play slides",
      "default": true
    },
    {
      "type": "range",
      "id": "autoplay_speed",
      "min": 3000,
      "max": 9000,
      "step": 1000,
      "unit": "ms",
      "label": "Auto-play speed",
      "default": 5000
    },
    {
      "type": "checkbox",
      "id": "enable_overlay",
      "label": "Enable overlay",
      "default": true
    },
    {
      "type": "select",
      "id": "overlay_opacity",
      "label": "Overlay opacity",
      "options": [
        {
          "value": "10",
          "label": "10%"
        },
        {
          "value": "20",
          "label": "20%"
        },
        {
          "value": "30",
          "label": "30%"
        },
        {
          "value": "40",
          "label": "40%"
        },
        {
          "value": "50",
          "label": "50%"
        },
        {
          "value": "60",
          "label": "60%"
        }
      ],
      "default": "30"
    },
    {
      "type": "select",
      "id": "height_class",
      "label": "Section height",
      "options": [
        {
          "value": "h-screen",
          "label": "Full screen"
        },
        {
          "value": "h-screen-80",
          "label": "Large (80vh)"
        },
        {
          "value": "h-screen-60",
          "label": "Medium (60vh)"
        },
        {
          "value": "h-screen-40",
          "label": "Small (40vh)"
        }
      ],
      "default": "h-screen-80"
    },
    {
      "type": "select",
      "id": "text_color_class",
      "label": "Text color",
      "options": [
        {
          "value": "text-white",
          "label": "White"
        },
        {
          "value": "text-gray-900",
          "label": "Dark"
        },
        {
          "value": "text-gray-100",
          "label": "Light Gray"
        }
      ],
      "default": "text-white"
    }
  ],
  "blocks": [
    {
      "type": "slide",
      "name": "Slide",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Slide image"
        },
        {
          "type": "text",
          "id": "subtitle",
          "label": "Subtitle",
          "default": "Welcome to our store"
        },
        {
          "type": "text",
          "id": "heading",
          "label": "Heading",
          "default": "Discover Amazing Products"
        },
        {
          "type": "richtext",
          "id": "description",
          "label": "Description",
          "default": "<p>Add a compelling description for this slide</p>"
        },
        {
          "type": "select",
          "id": "text_alignment",
          "label": "Text alignment",
          "options": [
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "right",
              "label": "Right"
            }
          ],
          "default": "center"
        },
        {
          "type": "select",
          "id": "content_position",
          "label": "Content position",
          "options": [
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "start",
              "label": "Left"
            },
            {
              "value": "end",
              "label": "Right"
            }
          ],
          "default": "center"
        },
        {
          "type": "header",
          "content": "Buttons"
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Button text",
          "default": "Shop Now"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button link"
        },
        {
          "type": "select",
          "id": "button_style_class",
          "label": "Button style",
          "options": [
            {
              "value": "bg-white text-gray-900 hover:bg-gray-100",
              "label": "White"
            },
            {
              "value": "bg-gray-900 text-white hover:bg-gray-800",
              "label": "Dark"
            },
            {
              "value": "bg-blue-600 text-white hover:bg-blue-700",
              "label": "Blue"
            },
            {
              "value": "bg-green-600 text-white hover:bg-green-700",
              "label": "Green"
            }
          ],
          "default": "bg-white text-gray-900 hover:bg-gray-100"
        },
        {
          "type": "text",
          "id": "secondary_button_text",
          "label": "Secondary button text"
        },
        {
          "type": "url",
          "id": "secondary_button_link",
          "label": "Secondary button link"
        },
        {
          "type": "select",
          "id": "secondary_button_style_class",
          "label": "Secondary button style",
          "options": [
            {
              "value": "border-white text-white hover:bg-white",
              "label": "White outline"
            },
            {
              "value": "border-gray-900 text-gray-900 hover:bg-gray-900",
              "label": "Dark outline"
            },
            {
              "value": "border-blue-600 text-blue-600 hover:bg-blue-600",
              "label": "Blue outline"
            }
          ],
          "default": "border-white text-white hover:bg-white"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Slideshow (Tailwind)",
      "blocks": [
        {
          "type": "slide"
        },
        {
          "type": "slide"
        },
        {
          "type": "slide"
        }
      ]
    }
  ]
}
{% endschema %}